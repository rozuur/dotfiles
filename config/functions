# Place file name in header when catting multiple files
function mcat()
{
    more "$@" | cat
}

# Clear screen, cygwin seems to not have clear command
function clear()
{
    if [ command -v clear 2>/dev/null ]; then
        clear
    else
        printf "\033c"
    fi
}

function ff() {
    if [ $# -eq 0 ]; then
        find . -type f
    elif [ $# -eq 1 ]; then
        find . -type f -iname "*$1*";
    else
        find "$2" -type f -iname "*$1*";
    fi
}

function ffd() {
    if [ $# -eq 0 ]; then
        find . -type d
    elif [ $# -eq 1 ]; then
        find . -type d -iname "*$1*";
    else
        find "$2" -type d -iname "*$1*";
    fi
}

function ffe() {
    if [ $# -eq 0 ]; then
        find . -type f
    elif [ $# -eq 1 ]; then
        find . -type f -iname "*$1";
    else
        find "$2" -type f -iname "*$1";
    fi
}

# alias for git, which displays status
function g() {
    if [ $# -eq 0 ]; then
        git status
    else
        git "$@"
    fi
}

# Recursively own directory
function grab() {
  sudo chown -R ${USER} ${1:-.}
}

# Simple download utility, always non secure
# Usage download $1 $2
# $1 -> http location or s3 location or host@location
# $2 -> local file location, if not provided uses "."
function download {
    local loc="$1"
    local outloc="${2-.}"
    echo $loc
    if [[ "${loc}" =~ ^https?://* ]]; then
        wget --no-cookies --no-check-certificate --no-clobber "${loc}" --output-document="${outloc}"
    elif [[ "${loc}" =~ ^s3://* ]]; then
       s3cmd --no-ssl --no-encrypt --preserve --no-mime-magic get "${loc}" "${outloc}"
    else
       scp -c arcfour "${loc}" "${outloc}"
    fi
}

function scr {
  local host=${1? Where is the host}
  ssh "$host" -t screen -x -R -S "$USER"
}
